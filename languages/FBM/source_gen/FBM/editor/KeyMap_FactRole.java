package FBM.editor;

/*Generated by MPS */

import jetbrains.mps.editor.runtime.cells.KeyMapImpl;
import org.apache.log4j.Logger;
import org.apache.log4j.LogManager;
import jetbrains.mps.openapi.editor.cells.KeyMapAction;
import jetbrains.mps.editor.runtime.cells.KeyMapActionImpl;
import jetbrains.mps.openapi.editor.EditorContext;
import jetbrains.mps.openapi.editor.cells.EditorCell;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import java.util.List;
import jetbrains.mps.baseLanguage.logging.runtime.model.LoggingRuntime;
import org.apache.log4j.Level;
import FBM.behavior.FactPopulation__BehaviorDescriptor;

public class KeyMap_FactRole extends KeyMapImpl {
  private static final Logger LOG = LogManager.getLogger(KeyMap_FactRole.class);
  public KeyMap_FactRole() {
    this.setApplicableToEveryModel(false);
    KeyMapAction action;
    action = new KeyMap_FactRole.KeyMap_FactRole_Action0();
    this.putAction("any", "VK_ENTER", action);
  }
  public static class KeyMap_FactRole_Action0 extends KeyMapActionImpl {
    public KeyMap_FactRole_Action0() {
      this.setShownInPopupMenu(false);
    }
    public boolean isMenuAlwaysShown() {
      return false;
    }
    public boolean canExecute(final EditorContext editorContext) {
      EditorCell contextCell = editorContext.getContextCell();
      if ((contextCell == null)) {
        return false;
      }
      SNode contextNode = contextCell.getSNode();
      if (contextNode == null) {
        return false;
      }
      if (!(SNodeOperations.isInstanceOf(contextNode, MetaAdapterFactory.getConcept(0xc25c730f75b14ba8L, 0xbf0613ccd89082c9L, 0x29b663a56853c90aL, "FBM.structure.FactRole")))) {
        return false;
      }
      return true;
    }
    public void execute(final EditorContext editorContext) {
      EditorCell contextCell = editorContext.getContextCell();
      this.execute_internal(editorContext, contextCell.getSNode(), this.getSelectedNodes(editorContext));
    }
    private void execute_internal(final EditorContext editorContext, final SNode node, final List<SNode> selectedNodes) {
      if (LOG.isInfoEnabled()) {
        LoggingRuntime.legacyLog(Level.INFO, "Keymap FactRole", KeyMap_FactRole.class, null);
      }
      {
        final SNode factTable = SNodeOperations.getParent(SNodeOperations.getParent(node));
        if (SNodeOperations.isInstanceOf(factTable, MetaAdapterFactory.getConcept(0xc25c730f75b14ba8L, 0xbf0613ccd89082c9L, 0x29b663a568f70830L, "FBM.structure.FactPopulation"))) {
          FactPopulation__BehaviorDescriptor.newFact_id2AQoUlCZ5fF.invoke(factTable);
        }
      }
    }
    public String getKeyStroke() {
      return " ENTER";
    }
  }
}
